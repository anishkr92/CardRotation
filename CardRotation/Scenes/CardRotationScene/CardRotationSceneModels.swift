//
//  CardRotationSceneModels.swift
//  CardRotation
//
//  Created by Anish Kumar on 05/12/19.
//  Copyright (c) 2019 Anish Kumar. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

enum CardRotationScene
{
    // MARK: Use cases
    
    struct Request
    {
        var rotationAngle: Float
        var duration: CFTimeInterval
    }
    
    struct Response
    {
        var frontSide: CardRotationData
        var backSide: CardRotationData
        var rotationAngle: Float
        var rotatedByValue: Float
        var duration: CFTimeInterval
        
        /// Initializer for CardRotationScene.Response
        /// - Parameters:
        ///   - frontFromAngle: Rotation stating angle for the front side of the card
        ///   - frontToAngle: Rotation ending angle for the front side of the card
        ///   - rotationAngle: Angle by which the card is rotated
        ///   - duration: Duration taken to complete the rotation
        init(frontFromAngle: Float, frontToAngle: Float, rotationAngle: Float, duration: CFTimeInterval) {
            let frontFromValue = frontFromAngle * CRConstants.radianFactor
            let frontToValue = frontToAngle * CRConstants.radianFactor
            self.frontSide = CardRotationData(fromAngle: frontFromAngle, toAngle: frontToAngle, fromValue: frontFromValue, toValue: frontToValue)

            let backFromValue = (frontFromAngle + 180.0) * CRConstants.radianFactor
            let backToValue = (frontToAngle + 180.0) * CRConstants.radianFactor
            self.backSide = CardRotationData(fromAngle: frontFromAngle + 180.0, toAngle: frontToAngle + 180.0, fromValue: backFromValue, toValue: backToValue)

            self.rotationAngle = rotationAngle
            self.rotatedByValue = rotationAngle * CRConstants.radianFactor
            self.duration = duration
        }
    }
    
    struct ViewModel
    {
        var frontSideToValue: Float
        var backSideToValue: Float
        var duration: CFTimeInterval
    }

    struct CardRotationData {
        var fromAngle: Float
        var toAngle: Float
        var fromValue: Float
        var toValue: Float
    }

    enum RotationDirection {
        case left
        case right
    }
}
